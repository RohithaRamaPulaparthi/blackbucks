
function App() {
  return (
    <div>
      <h1>Adfar Rasheed</h1>
      {header}
      {header}
      {header}
    </div>
  );
}
const myStyle = {
  color:"red",
  backgroundColor:"pink"
}
const header = (
  <div style={myStyle}>
    <h1>We are starting React Classes</h1>
    <h1>Adfar Rashhed</h1>
    <h4>09-08-1998</h4>
  </div>
)
export default App;


import About from "./components/About"
import Contact from "./components/Contact";
function App() {
  return (
    <>
  
      <About name="Adfar" prof="educator" age="25"/>
      <About name="Sindhu" prof="Student" age="23"/>
      <About name="Sri" prof="Technical" age="21"/>
      <About name="Pravallika" prof="React" age="22"/>
      

    </>
  );
}

export default App;



import React from 'react'

export default function App() {
  const arr = [1,2,3,4,5,6,7,8]
 
  return (
    <div>
      {arr.map((x,i)=> {return <li key={i}>{x}</li>})}
    </div>
  )
}


import React, {useState} from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const incrementOne =()=>{
    setCount(count+1)
  }
  const decrementOne = ()=>{
    setCount(count - 1)
  }
  return (
    <div>
      <h1>{count}</h1>
      <button onClick={incrementOne}>Add One</button>
      <button onClick={decrementOne}>Sub One</button>
    </div>
  )
}



import React from 'react'

import Component1 from './styles/Component1'
import Component2 from './styles/Component2'



export default function App() {
  
  return (
    <>
    {/* <div style={{height:"200px",width:"300px",backgroundColor:"gray"}}>
      <h1 style={{color:"red",backgroundColor:"green"}}>Adfar Rasheed</h1>
      <h3 style={{border:"2px solid red"}}>Blackbucks</h3>
      
    </div>
    <div>
    <Adfar/>
    </div> */}
    <Component1/>
    <Component2/>
    </>
  )
}


import React, { useEffect, useState } from 'react'

export default function App() {
  const [count,setcount] = useState(0)
  const [number,setNumber] = useState(0)
  const increment=()=>{
    setcount(count+1)
  }
  const decrement =()=>{
    setNumber(number - 1)
  }
  useEffect(()=>{
    console.log("useEffect")
  },[count,number])
  return (
    <div>
      <h1>{count}</h1>
      <button onClick={increment}>Count</button>
      <h1>{number}</h1>
      <button onClick={decrement}>Number</button>
    </div>
  )
}



import React, { useReducer } from 'react'
const counterReducer = (state,action)=>{
  if(action.type === "Adfar"){
    return {
      count : state.count + 1
    }
  }
  else if(action.type === "Raj"){
    return {
      count : state.count -1
    }
  }
  else if(action.type === "Pravilika"){
    return {
      count:state.count + 10
    }
  }
  else if(action.type === "Are"){
    return {
      count:state.count-10
    }
  }
  return state
}
export default function App() {
  // const [first, setfirst] = useState(0)
  const [state,dispatch] = useReducer(counterReducer,{count:0})
  console.log(state)
  return (
    <div>
      <h1>{state.count}</h1>
      <button onClick={()=>{dispatch({type:"Adfar"})}}>Add one</button>
      <button onClick={()=>{dispatch({type:"Raj"})}}>Minus one</button>
      <button onClick={()=>{dispatch({type:"Pravilika"})}}>Add 10</button>
      <button onClick={()=>{dispatch({type:"Are"})}}>Minus 10</button>
      
    </div>
  )
}


import React, { useRef } from 'react'

export default function App() {
  const inputnameref = useRef()
  const inputpasswordref = useRef()
  const handlesubmit=(e)=>{
    e.preventDefault()
    console.log(inputnameref.current.value,inputpasswordref.current.value)
  }
  return (
    <div>
      <form>
        <h2>Uncontrolled Components</h2>
        <input type="text" placeholder='Enter Name' ref={inputnameref}/><br />
        <input type="password" placeholder='Enter password' ref={inputpasswordref} />
        <button onClick={(e)=>{handlesubmit(e)}}>Submit</button>
      </form>
    </div>
  )
}


import React, { useState } from 'react'

export default function App() {
  const [name, setname] = useState("")
  const [password, setpassword] = useState("")
  const handlesubmit=(e)=>{
    e.preventDefault()
    console.log(name)
  console.log(password)
  }
  return (
    <div>
      <form>
        <input type="text" placeholder='Enter Name' value={name} onChange={(e)=>{setname(e.target.value)}}/>
        <input type="password" placeholder='Enter password' value={password} onChange={(e)=>{setpassword(e.target.value)}}/>
        <button onClick={(e)=>{handlesubmit(e)}}>Submit</button>
      </form>
    </div>
  )
}


import React, { useState } from 'react'

export default function App() {
  const [name,setName] = useState("")
  const [email,setEmail] = useState("")
  const [password,setPassword] = useState("")
  const [isLoggedin,setIsloggedin] = useState(false)
  const login=()=>{
    const userData={
      name,
      email,
      password,
    }
    localStorage.setItem("userdata",JSON.stringify(userData))
    setName("")
    setEmail("")
    setPassword("")
    setIsloggedin(true)
  }
  const logout =()=>{
    localStorage.removeItem("userdata")
    setIsloggedin(false)
  }
  return (
    <div>
      {!isLoggedin? (
        <form>
        <input type="text" placeholder='Name' value={name} onChange={(e)=>{setName(e.target.value)}}/>
        <input type="email" placeholder='Email' value={email} onChange={(e)=>{setEmail(e.target.value)}}/>
        <input type="password" placeholder='Password' value={password} onChange={(e)=>{setPassword(e.target.value)}}/>
        <button onClick={()=>{login()}}>Go</button>
        
      </form>
      ):(
        <>
         <h1>User is Logged In</h1>
         <button onClick={logout}>Logout</button>
        </>
      )
}
    </div>
  )
}



import React, { useEffect, useState } from 'react'
import GetQuote from './GetQuote'
const mystyle={
  padding:"10px 20px",
  backgroundColor:"4caf50",
  color:"red",
  fontSize:"18px",
  cursor:"pointer"
}
const mystyle1 = {
  color:"white",
  padding:"30px",
  margin:"30px",
  backgroundColor:"gray",
  fontSize:"20px"

}
export default function App() {
  const [joke,setJoke] = useState({})
  const getJoke=async ()=>{
    const res = await fetch("https://official-joke-api.appspot.com/random_joke")
    const data = await res.json()
    setJoke(data)
  }
  useEffect(()=>{
    getJoke()
  },[])
  const handleclick =async()=>{
    await getJoke()
  }
  return (
    <div>
      <h1 style={mystyle1}>{joke.setup} ... {joke.punchline}</h1>
      <button  style={mystyle1} onClick={handleclick}>Generate Joke</button>
      <GetQuote/>
    </div>
  )
}
